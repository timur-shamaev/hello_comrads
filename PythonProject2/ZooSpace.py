import telebot
from telebot import types

# –í–∞—à —Ç–æ–∫–µ–Ω
TOKEN = '7693141583:AAGaOOSfQFDowMidDUTjfsjgQC1PUQc3Ctk'
bot = telebot.TeleBot(TOKEN)

# –í–æ–ø—Ä–æ—Å—ã –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –∏ –æ—Ç–≤–µ—Ç—ã
quiz = {
    "–ö–∞–∫–æ–µ —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –Ω–∞ –ó–µ–º–ª–µ?":
        {
            "answers": ["–°–∏–Ω–∏–π –∫–∏—Ç", "–°–ª–æ–Ω", "–ê–∫—É–ª–∞", "–ñ–∏—Ä–∞—Ñ"],
            "correct_answer": "–°–∏–Ω–∏–π –∫–∏—Ç"
        },
    "–°–∫–æ–ª—å–∫–æ –Ω–æ–≥ —É –æ—Å—å–º–∏–Ω–æ–≥–∞?":
        {
            "answers": ["6", "8", "10", "12"],
            "correct_answer": "8"
        },
    "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –¥–µ—Ç—ë–Ω—ã—à –∫–µ–Ω–≥—É—Ä—É?":
        {
            "answers": ["–î–∂–æ", "–ö–∏–¥", "–ü–∞–ø", "–î–∂–æ-–î–∂–æ"],
            "correct_answer": "–î–∂–æ"
        },
    "–ö–∞–∫–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∂–∏–≤–æ—Ç–Ω—ã–µ —è–≤–ª—è—é—Ç—Å—è –ø—Ä—è–º—ã–º–∏ –ø–æ—Ç–æ–º–∫–∞–º–∏ –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–≤?":
        {
            "answers": ["–í–∞—Ä–∞–Ω—ã", "–ö—Ä–æ–∫–æ–¥–∏–ª—ã", "–î—Ä–∞–∫–æ–Ω—ã", "–ü—Ç–∏—Ü—ã"],
            "correct_answer": "–ü—Ç–∏—Ü—ã"
        },
    "–ö–∞–∫–æ–µ –∏–∑ —ç—Ç–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –æ—Ç—Ä—è–¥—É –∫–æ—à–∫–æ–æ–±—Ä–∞–∑–Ω—ã—Ö?":
        {
            "answers": ["–°–µ–≤–µ—Ä–Ω—ã–π –º–æ—Ä—Å–∫–æ–π –∫–æ—Ç–∏–∫", "–¢–∏–±–µ—Ç—Å–∫–∞—è –ª–∏—Å–∏—Ü–∞", "–ó–µ–º–ª—è–Ω–æ–π –≤–æ–ª–∫", "–ú–∞–ª–∞—è –ø–∞–Ω–¥–∞"],
            "correct_answer": "–ó–µ–º–ª—è–Ω–æ–π –≤–æ–ª–∫"
        },
    "–ù–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–µ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏ –±–µ–≥–µ–º–æ—Ç–æ–≤ —ç—Ç–æ:":
        {
            "answers": ["–ö–∏—Ç–æ–æ–±—Ä–∞–∑–Ω—ã–µ", "–ù–æ—Å–æ—Ä–æ–≥–æ–≤—ã–µ", "–¢–∞–ø–∏—Ä–æ–≤—ã–µ", "–°–≤–∏–Ω—ã–µ"],
            "correct_answer": "–ö–∏—Ç–æ–æ–±—Ä–∞–∑–Ω—ã–µ"
        },
    "–°–∞–º–∞—è –≥—Ä–æ–º–∫–∞—è –ø—Ç–∏—Ü–∞ –≤ –º–∏—Ä–µ:":
        {
            "answers": ["–ë–æ–ª—å—à–æ–π –±–µ–ª–æ—Ö–æ—Ö–ª—ã–π –∫–∞–∫–∞–¥—É", "–ò–Ω–¥–∏–π—Å–∫–∏–π –ø–∞–≤–ª–∏–Ω", "–ö—Ä–∏–∫–ª–∏–≤–∞—è —Å–æ—Ä–æ–∫–æ–ø—É—Ç–æ–≤–∞—è –ø–∏—Ö–∞", "–û–¥–Ω–æ—É—Å—ã–π –∑–≤–æ–Ω–∞—Ä—å"],
            "correct_answer": "–û–¥–Ω–æ—É—Å—ã–π –∑–≤–æ–Ω–∞—Ä—å"
        },
    "–ö–∞–∫–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –º–æ–∂–µ—Ç —Ä–∞–∑–ª–∏—á–∞—Ç—å 12 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤, –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Å—å –≤–∏–¥–∏–º—ã–π —Å–ø–µ–∫—Ç—Ä ‚Äî –æ—Ç —É–ª—å—Ç—Ä–∞—Ñ–∏–æ–ª–µ—Ç–æ–≤–æ–π –≥—Ä–∞–Ω–∏—Ü—ã –¥–æ –∏–Ω—Ñ—Ä–∞–∫—Ä–∞—Å–Ω–æ–π?":
        {
            "answers": ["–†–∞–∫-—â–µ–ª–∫—É–Ω –ê–ª—å—Ñ–µ—É—Å", "–ò—Å–ø–æ–ª–∏–Ω—Å–∫–∏–π —Å–æ–ø–ª–æ—Ö–≤–æ—Å—Ç", "–ì–ª–æ–∫–∞—è –∫—É–∑–¥—Ä–∞", "–Æ–∂–Ω—ã–π –≥–∏–≥–∞–Ω—Ç—Å–∫–∏–π –∫–∞–ª—å–º–∞—Ä"],
            "correct_answer": "–†–∞–∫-—â–µ–ª–∫—É–Ω –ê–ª—å—Ñ–µ—É—Å"
        },
    "–ö–∞–∫–æ–µ –∏–∑ —ç—Ç–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö —Å–∞–º–æ–µ –º–∞–ª–µ–Ω—å–∫–æ–µ?":
        {
            "answers": ["–Ø–ø–æ–Ω—Å–∫–∏–π –∫—Ä–∞–± –ø–∞—É–∫", "–û–±—ã–∫–Ω–æ–≤–µ–Ω–Ω–∞—è –ª—É–Ω–∞-—Ä—ã–±–∞", "–Ø–≤–∞–Ω—Å–∫–∏–π –æ–ª–µ–Ω—ë–∫", "–ì–∞–º–±–∏–π—Å–∫–∞—è –∫—Ä—ã—Å–∞"],
            "correct_answer": "–Ø–≤–∞–Ω—Å–∫–∏–π –æ–ª–µ–Ω—ë–∫"
        },
    "–ù–∞ –∫–æ–≥–æ –±—ã–ª –ø–æ—Ö–æ–∂ –æ–±—â–∏–π –ø—Ä–µ–¥–æ–∫ –æ–±–µ–∑—å—è–Ω—ã –∏ —á–µ–ª–æ–≤–µ–∫–∞?":
        {
            "answers": ["–ù–∞ –æ–±–µ–∑—å—è–Ω—É", "–ù–∞ —á–µ–ª–æ–≤–µ–∫–∞", "–ù–∞ —Ä–µ–ø—Ç–∏–ª–æ–∏–¥–∞", "–ù–∞ –±–µ–ª–∫—É"],
            "correct_answer": "–ù–∞ –±–µ–ª–∫—É"
        },
}

# —Ä–∞–∑–Ω—ã–µ –∏—Å—Ö–æ–¥—ã –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
result = [
    '–ù–µ —Ç–æ —á—Ç–æ–±—ã –≤–∞—à–∏ –∑–Ω–∞–Ω–∏—è –æ –∂–∏–≤–æ—Ç–Ω—ã—Ö –±—ã–ª–∏ —Å–æ–≤—Å–µ–º –ø–ª–æ—Ö–∏–º–∏, –Ω–æ –≤–∞–º –∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—É—é –º—ã—à—å —Å—Ç—Ä–∞—à–Ω–æ –¥–æ–≤–µ—Ä–∏—Ç—å! ü§®ü§®ü§®',
    '–ù–µ–º–Ω–æ–≥–æ —Å—Ç–∞—Ä–∞–Ω–∏—è, —Ç–µ—Ä–ø–µ–Ω–∏—è –∏ —É—Å–µ—Ä–¥–∏—è –∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –∫–∞–∫–æ–º-—Ç–æ —Ä–µ–¥–∫–æ–º –∂–∏–≤–æ—Ç–Ω–æ–º. –ê –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ø–æ–≥–ª–∞–¥—å—Ç–µ –∫–æ—Ç–∞. üòΩüòΩüòΩ',
    '–í—ã –∫–∞–∫ –±—É—Ä—ã–π –º–µ–¥–≤–µ–¥—å. –í–µ—Å—å–º–∞ —É–º–Ω—ã –∏ —Ö–∏—Ç—Ä—ã. –ö–∞–∫ –Ω–∞—Å—á—ë—Ç —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –æ–ø–µ–∫—É–Ω–æ–º –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–≥–æ –∫–æ—Å–æ–ª–∞–ø–æ–≥–æ? üêªüêªüêª',
    '–í–∞—à —Ä–∞–∑—É–º —Å–∏—è–µ—Ç –∫–∞–∫ —à–µ—Ä—Å—Ç—å —Å–Ω–µ–∂–Ω–æ–≥–æ –±–∞—Ä—Å–∞! –ü–æ–∂–∞–ª—É–π, –≤—ã –º–æ–∂–µ—Ç–µ —Å—Ç–∞—Ç—å –æ–ø–µ–∫—É–Ω–æ–º –æ–¥–Ω–æ–≥–æ –∏–∑ —ç—Ç–∏—Ö –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∏–π. üòçüòçüòç',
    '–í–∞—à–∏ –∑–Ω–∞–Ω–∏—è –º–æ–≥—É—Ç –≤–æ—Å–∫—Ä–µ—Å–∏—Ç—å –º–∞–º–æ–Ω—Ç–∞, —à–µ—Ä—Å—Ç–∏—Å—Ç–æ–≥–æ –Ω–æ—Å–æ—Ä–æ–≥–∞ –∏ –ø–∞—Ä—É –Ω–µ–∞–Ω–¥–µ—Ä—Ç–∞–ª—å—Ü–µ–≤! ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è'
]

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π –ø–æ–∏–≥—Ä–∞–µ–º? –ù–∞–ø–∏—à–∏ '–≤–∏–∫—Ç–æ—Ä–∏–Ω–∞', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.")

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã '–≤–∏–∫—Ç–æ—Ä–∏–Ω–∞'
@bot.message_handler(func=lambda message: message.text.lower() == '–≤–∏–∫—Ç–æ—Ä–∏–Ω–∞')
def start_quiz(message):
    user_data[message.chat.id] = {'question_index': 0, 'score': 0}
    ask_question(message)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
def ask_question(message):
    chat_id = message.chat.id
    question_index = user_data[chat_id]['question_index']
    questions = list(quiz.keys())


    if question_index < len(questions):
        question = questions[question_index]
        options = quiz[question]['answers']


        markup = types.InlineKeyboardMarkup()
        for option in options:
            markup.add(types.InlineKeyboardButton(option, callback_data=option))


        bot.send_message(chat_id, question, reply_markup=markup)
    else:
        score = user_data[chat_id]['score']
        bot.send_message(chat_id, f"–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {score} –∏–∑ {len(quiz)}")
        if score >= 9:
            bot.send_message(chat_id, f"{result[4]}")
        elif score >= 7:
            bot.send_message(chat_id, f"{result[3]}")
        elif score >= 5:
            bot.send_message(chat_id, f"{result[2]}")
        elif score >= 3:
            bot.send_message(chat_id, f"{result[1]}")
        elif score >= 0:
            bot.send_message(chat_id, f"{result[0]}")
        user_data.pop(chat_id)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
@bot.callback_query_handler(func=lambda call: True)
def handle_answer(call):
    chat_id = call.message.chat.id
    question_index = user_data[chat_id]['question_index']
    questions = list(quiz.keys())
    question = questions[question_index]
    correct_answer = quiz[question]['correct_answer']


    if call.data == correct_answer:
        user_data[chat_id]['score'] += 1
        bot.answer_callback_query(call.id, "–ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
    else:
        bot.answer_callback_query(call.id, f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}")


    user_data[chat_id]['question_index'] += 1
    ask_question(call.message)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()